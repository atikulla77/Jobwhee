import { Inter, Poppins, Roboto_Condensed } from "next/font/google";
import { getMessages } from "next-intl/server";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import { MessengerProvider } from "@/contextProviders/MessengerContext";

export const metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

const poppins = Poppins({
    weight: ["400", "500", "600", "700", "800", "900"],
    subsets: ["latin"],
});

const inter = Inter({
    weight: ["400", "500", "600", "700", "800", "900"],
    subsets: ["latin", "greek"],
});

const robotoCondensed = Roboto_Condensed({
    weight: ["300", "400", "700"],
    subsets: ["latin", "greek"],
});
export default async function RootLayout({
    children,
    params,
}: {
    children: React.ReactNode;
    params: Promise<{ locale: string }>;
}) {
    const locale = (await params).locale;

    // Ensure that the incoming `locale` is valid
    if (!routing.locales.includes(locale as any)) {
        notFound();
    }


    const fontClass = locale === "el" ? robotoCondensed.className : poppins.className;

    return (
        <html lang={locale}>
            <body className={`antialiased ${fontClass}`}>
                <MessengerProvider>
                    {children}
                </MessengerProvider>
            </body>
        </html>
    );
}
